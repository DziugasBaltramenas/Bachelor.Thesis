@article{Mohammed2010,
abstract = {This research deals with a vital and important issue in computer world. It is concerned with the software management processes that examine the area of software development through the development models, which are known as software development life cycle. It represents five of the development models namely, waterfall, Iteration, V-shaped, spiral and Extreme programming. These models have advantages and disadvantages as well. Therefore, the main objective of this research is to represent different models of software development and make a comparison between them to show the features and defects of each model.},
archivePrefix = {arXiv},
arxivId = {0909.2367},
author = {Mohammed, Nabil and Munassar, Ali and Govardhan, A},
doi = {10.1.1.403.3201},
eprint = {0909.2367},
file = {:C$\backslash$:/Users/Dziugas/Desktop/Universitetas/kursinis darbas/A{\_}Comparison{\_}Between{\_}Five{\_}Models{\_}Of{\_}Software{\_}Engin.pdf:pdf},
isbn = {9780471793717},
issn = {09736107},
journal = {International Journal of Computer Science},
keywords = {Development Models,Software Development,Software Development Life Cycle,Software Management Processes},
number = {5},
pages = {94--101},
title = {{A Comparison Between Five Models Of Software Engineering}},
volume = {7},
year = {2010}
}
@article{Elliot2014,
abstract = {Based on a research survey conducted during October and November of 2014 across multiple industries and with respondents across development, testing, and operations, this document identifies for the first time critical DevOps metrics from 20+ Fortune 1000 organizations with revenue of at least {\$}1.39 billion. On average, 50 respondents answered each question. However, we used only the Fortune 1000–qualified respondents and utilized the broader segment to provide an additional baseline. The results show:  For the Fortune 1000, the average total cost of unplanned application downtime per year is {\$}1.25 billion to {\$}2.5 billion.  The average hourly cost of an infrastructure failure is {\$}100,000 per hour.  The average cost of a critical application failure per hour is {\$}500,000 to {\$}1 million.  The average number of deployments per month is expected to double in two years.  IT organizations that have tried to custom adjust current tools to meet DevOps practices have a failure rate of 80{\%}, thus making tool replacement and/or addition a critical requirement.  There is an expectation that DevOps-led projects will accelerate the delivery of capabilities to the customer by an average of 15–20{\%}.  The average cost percentage (per year) of a single application's development, testing, deployment, and operations life cycle considered wasteful and unnecessary is 25{\%}.  Development teams are the leading sponsors of DevOps teams, with operations and architecture teams close behind.  Over the next two years, DevOps teams will increasingly bring security, compliance, and audit teams into the project-planning cycle to embed some of these requirements in automated processes to reduce business and security risks.  There are significant acceleration advantages for IT leaders that decide to create a DevOps team or center of excellence versus a less-organized DevOps organizational approach. {\textcopyright}2014 IDC {\#}253155 2 IN THIS INSIGHT This IDC Insight provides best practice metrics for development, testing, application support, and infrastructure and operations teams from 20+ Fortune 1000 organizations with at least {\$}1.39 billion in revenue — a set of baseline metrics collected from the peer group. It offers a set of guides to help drive business and technology objectives and judge success and provides a peer perspective for DevOps metrics. Table 1 shows the titles of the respondents.},
author = {Elliot, Stephen},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Elliot - 2014 - DevOps and the Cost of Downtime Fortune 1000 Best Practice Metrics Quantified IDC OPINION.pdf:pdf},
title = {{DevOps and the Cost of Downtime: Fortune 1000 Best Practice Metrics Quantified IDC OPINION}},
url = {http://www.smallake.kr/wp-content/uploads/2013/07/DevOps-metrics-Fortune1K.pdf},
year = {2014}
}
@article{Giardino2014,
author = {Giardino, Carmine and Unterkalmsteiner, Michael and Abrahamsson, Pekka},
doi = {10.1016/j.infsof},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Giardino, Unterkalmsteiner, Abrahamsson - 2014 - Software Development in Startup Companies A Systematic Mapping Study Electronic Resear.pdf:pdf},
journal = {Information and Software Technology},
number = {January},
title = {{Software Development in Startup Companies : A Systematic Mapping Study Electronic Research Archive of Blekinge Institute of Technology Citation for the published Journal paper : Title : In press : Software Development in Startup Companies : A Systematic M}},
year = {2014}
}
@article{Fayad2000,
abstract = {Note: OCR errors may be found in this Reference List extracted from the full text article. ACM has opted to expose the complete List rather than only correct and linked references.},
author = {Fayad, Mohamed E. and Laitinen, Mauri and Ward, Robert P.},
doi = {10.1145/330534.330555},
file = {:C$\backslash$:/Users/Dziugas/Desktop/Universitetas/kursinis darbas/startups/p115-fayad.pdf:pdf},
isbn = {0001-0782},
issn = {00010782},
journal = {Communications of the ACM},
number = {3},
pages = {115--118},
title = {{Software Engineering in the Small}},
url = {http://portal.acm.org/citation.cfm?doid=330534.330555},
volume = {43},
year = {2000}
}
@article{Mazzei2017,
abstract = {The paper presents a novel approach to the prototyping of interconnected products belonging to the Internet of Things field. The chosen solution tries to merge the benefits of monolithic vertical approaches (where everything is chosen from the board to the cloud) with those of horizontal solutions (where every time all the elements can be chosen and the code for integrating them written). The proposed solution allows to speed up the prototyping process and to let the developers focus on coding the product behaviours instead of solving customization issues. The advantages of the proposed solution goes beyond the prototyping, as the prototyped solution can be easily converted in an industrial grade one. The paper ends with a real case application that shows how an IoT industrial refrigerator smar-tification unit has been developed thanks to the horizontal stack here proposed.},
author = {Mazzei, Daniele and Baldi, Giacomo and Montelisciani, Gabriele and Fantoni, Gualtiero},
doi = {10.1109/CIOT.2016.7872915},
file = {:C$\backslash$:/Users/Dziugas/Desktop/07872915.pdf:pdf},
isbn = {9781509049592},
journal = {2016 Cloudification of the Internet of Things, CIoT 2016},
keywords = {embedded,iot,microcontroller,python,smart products,virtual-machine},
pages = {2--6},
title = {{A full stack for quick prototyping of IoT solutions}},
year = {2017}
}
@book{Newman2015,
abstract = {Distributed systems have become more fine-grained in the past 10 years, shifting from code-heavy monolithic applications to smaller, self-contained microservices. But developing these systems brings its own set of headaches. With lots of examples and practical advice, this book takes a holistic view of the topics that system architects and administrators must consider when building, managing, and evolving microservice architectures.Microservice technologies are moving quickly. Author Sam Newman provides you with a firm grounding in the concepts while diving into current solutions for modeling, integrating, testing, deploying, and monitoring your own autonomous services. You'll follow a fictional company throughout the book to learn how building a microservice architecture affects a single domain.Discover how microservices allow you to align your system design with your organization's goalsLearn options for integrating a service with the rest of your systemTake an incremental approach when splitting monolithic codebasesDeploy individual microservices through continuous integrationExamine the complexities of testing and monitoring distributed servicesManage security with user-to-service and service-to-service modelsUnderstand the challenges of scaling microservice architectures},
archivePrefix = {arXiv},
arxivId = {1606.04036},
author = {Newman, Sam},
booktitle = {O'Reilly},
doi = {10.1109/MS.2016.64},
eprint = {1606.04036},
file = {:C$\backslash$:/Users/Dziugas/Downloads/Building-Microservices-Designing-Fine-Grained-Systems.pdf:pdf},
isbn = {978-1-491-95035-7},
issn = {07407459},
keywords = {www.it-ebooks.info},
pages = {280},
pmid = {15003161},
publisher = {O'Reilly Media},
title = {{Building Microservices}},
url = {https://www.google.hr/books?hl=en{\&}lr={\&}id=jjl4BgAAQBAJ{\&}pgis=1{\%}5Cnhttp:// oreilly.com/catalog/errata.csp?isbn=9781491950357},
year = {2015}
}
@article{,
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Unknown - Unknown - full-text.pdf:pdf},
title = {full-text}
}
@article{Fascic2016,
author = {Fascic, Victor},
file = {:C$\backslash$:/Users/Dziugas/Downloads/The-DevOps-2-0-Toolkit-Automating-the-Continuous-Deployment-Pipeline-with-Containerized-Microservices.pdf:pdf},
isbn = {B01BJ4V66M},
title = {{The DevOps 2.0 Toolkit}},
year = {2016}
}
@book{Familiar2015,
abstract = {This book provides practical guidance for adopting a high velocity, continuous delivery process to create reliable, scalable, Software-as-a-Service (SaaS) solutions that are designed and built using a microservice architecture, deployed to the Azure cloud, and managed through automation. Microservices, IoT, and Azure offers software developers, architects, and operations engineers' step-by-step directions for building SaaS applications—applications that are available 24x7, work on any device, scale elastically, and are resilient to change--through code, script, exercises, and a working reference implementation.},
author = {Familiar, Bob},
doi = {10.1007/978-1-4842-1275-2},
file = {:C$\backslash$:/Users/Dziugas/Desktop/Universitetas/kursinis darbas/Microservices-IoT-and-Azure-Leveraging-DevOps-and-Microservice-Architecture-to-Deliver-SaaS-Solutions.pdf:pdf},
isbn = {978-1-4842-1276-9},
pages = {188},
title = {{Microservices, IoT, and Azure}},
url = {https://www.springer.com/de/book/9781484212769{\%}5Cnhttp://link.springer.com/10.1007/978-1-4842-1275-2},
year = {2015}
}
@article{Sturtevant2017,
abstract = {Researchers have developed ways to think about, visualize, and measure software modularity and its erosion objectively and quantifiably. Using these techniques, you'll be able to determine whether your software is modular and identify complexity hotspots in your code that warrant further investigation.},
author = {Sturtevant, Dan},
doi = {10.1109/MS.2017.4541034},
file = {:C$\backslash$:/Users/Dziugas/Desktop/08239949.pdf:pdf},
issn = {07407459},
journal = {IEEE Software},
keywords = {Design Structure Matrices,DevOps,On DevOps,agile programming,software architecture,software development,software engineering},
number = {1},
pages = {104--108},
title = {{Modular Architectures Make You Agile in the Long Run}},
volume = {35},
year = {2017}
}
@article{Balalaie2016,
abstract = {When DevOps started gaining momentum in the software industry, one of the first service-based architectural styles to be introduced, be applied in practice, and become popular was microservices. Migrating monolithic architectures to cloud-native architectures such as microservices reaps many benefits, such as adaptability to technological changes and independent resource management for different system components. This article reports on experiences and lessons learned during incremental migration and architectural refactoring of a commercial MBaaS (mobile back end as a service) to microservices. It explains how adopting DevOps facilitated a smooth migration. Furthermore, the researchers transformed their experiences in different projects into reusable migration practices, resulting in microservices migration patterns. This article is part of a theme issue on DevOps. The Web extra at https://youtu.be/MF3-dKTCQ88 is an audio recording of Brian Brannon speaking with author Pooyan Jamshidi and James Lewis, principal engineer at ThoughtWorks, about DevOps and microservices architecture.},
archivePrefix = {arXiv},
arxivId = {1606.04036},
author = {Balalaie, Armin and Heydarnoori, Abbas and Jamshidi, Pooyan},
doi = {10.1109/MS.2016.64},
eprint = {1606.04036},
file = {:C$\backslash$:/Users/Dziugas/Desktop/07436659.pdf:pdf},
isbn = {9781509019618},
issn = {07407459},
journal = {IEEE Software},
keywords = {DevOps,architectural refactoring,cloud computing,microservices,migration pattern,mobile back end as a service,software development,software engineering},
number = {3},
pages = {42--52},
title = {{Microservices Architecture Enables DevOps: Migration to a Cloud-Native Architecture}},
volume = {33},
year = {2016}
}
@article{Fan2017,
abstract = {{\textcopyright} 2017 IEEE. The microservice architecture (MSA) is an emerging cloud software system, which provides fine-grained, self-contained service components (microservices) used in the construction of complex software systems. DevOps techniques are commonly used to automate the process of development and operation through continuous integration and continuous deployment. Monitoring software systems created by DevOps, makes it possible for MSA to obtain the feedback necessary to improve the system quickly and easily. Nonetheless, systematic, SDLC-driven methods (SDLC: software development life cycle) are lacking to facilitate the migration of software systems from a traditional monolithic architecture to MSA. Therefore, this paper proposes a migration process based on SDLC, including all of the methods and tools required during design, development, and implementation. The mobile application, EasyLearn, was used as an illustrative example to demonstrate the efficacy of the proposed migration process. We believe that this paper could provide valuable references for other development teams seeking to facilitate the migration of existing applications to MSA.},
author = {Fan, Chen Yuan and Ma, Shang Pin},
doi = {10.1109/AIMS.2017.23},
file = {:C$\backslash$:/Users/Dziugas/Desktop/08027278.pdf:pdf},
isbn = {9781538619995},
journal = {Proceedings - 2017 IEEE 6th International Conference on AI and Mobile Services, AIMS 2017},
keywords = {Microservice,Microservice architecture,Migration,Software development life cycle},
pages = {109--112},
title = {{Migrating Monolithic Mobile Application to Microservice Architecture: An Experiment Report}},
year = {2017}
}
@article{Waseem2017,
author = {Waseem, Muhammad and Liang, Peng},
doi = {10.1109/APSECW.2017.18},
file = {:C$\backslash$:/Users/Dziugas/Desktop/08312518.pdf:pdf},
isbn = {978-1-5386-2649-8},
journal = {2017 24th Asia-Pacific Software Engineering Conference Workshops (APSECW)},
number = {61472286},
pages = {13--14},
title = {{Microservices Architecture in DevOps}},
url = {http://ieeexplore.ieee.org/document/8312518/},
year = {2017}
}
@article{Akbar2018,
abstract = {Traditionally, software development organizations relied on heavyweight development methodologies, such as waterfall, V-model, and others. Later, agile development methodologies known as lightweight methodologies were introduced. Many considered these to be more flexible and more effective than heavyweight methodologies. Both methodologies are equally important for a software development life cycle (SDLC). The purpose of adopting software development methodologies is to optimize the process model to achieve milestones while concurrently and effectively managing time, budget and quality. The literature review reveals that there is a lack of statistical evidence for determining the effect of both methodologies on the six-pointed star model (Schedule, Scope, Budget, Risk, Resource and Quality). In this study, statistical comparisons were performed for the effects of both methodologies on each factor of the six-pointed star model and the interdependency among factors. Numerical analyses were conducted based on survey responses collected from the experienced users of both methodologies. After examining the results of all the factors of both methodologies, it was determined that lightweight methodologies are suitable for small-scale projects and that heavyweight methodologies perform better for medium- and large-scale projects.},
author = {Akbar, Muhammad Azeem and Sang, Jun and Khan, Arif Ali and Amin, Fazal E. and Nasrullah and Hussain, Shahid and Sohail, Mohammad Khalid and Xiang, Hong and Cai, Bin},
doi = {10.1109/ACCESS.2018.2805702},
file = {:C$\backslash$:/Users/Dziugas/Desktop/08290951.pdf:pdf},
issn = {21693536},
journal = {IEEE Access},
keywords = {Heavyweight methodologies,lightweight methodologies,software development life cycle,software requirement specification},
pages = {8066--8079},
title = {{Statistical Analysis of the Effects of Heavyweight and Lightweight Methodologies on the Six-Pointed Star Model}},
volume = {6},
year = {2018}
}
@article{Micic2017,
abstract = {Impact of agile methodologies on team capacity in automotive radio-navigation projects G Prostean, A Hutanu and S Volker -A 12 mV start-up converter using piezoelectric transformer for energy harvesting applications T Martinez, G Pillonnet and F Costa -Preliminary investigation of flow dynamics during the start-up of a bulb turbine model M Coulaud, R Fraser, J Lemay et al. -This content was downloaded from IP address 193.219.95.140 on 02/05/2018 at 10:55 Abstract: Project management in modern IT companies is often based on agile methodologies which have several advantages compared to traditional methodologies such is waterfall. Having in mind that clients sometimes change project during development it is crucial for an IT company to choose carefully which methodology is going to implement and is it going to be mostly based on one or is it going got be combination of several. There are several modern and often used methodologies but among those Scrum, Kanban and XP programming are usually the most common. Sometimes companies use mostly tools and procedures from one but quite often they use some of the combination of those methodologies. Having in mind that those methodologies are just a framework they allow companies to adapt it for their specific projects as well as for other limitations. These methodologies are in limited usage Bosnia but more and more IT companies are starting to use agile methodologies because it is practice and common not just for their clients abroad but also starting to be the only option in order to deliver quality product on time. However it is always challenging which methodology or combination of several companies should implement and how to connect it to its own project, organizational framework and HR management. This paper presents one case study based on local IT start up and delivers solution based on theoretical framework and practical limitations that case company has. 1. Introduction Modern software development is, to a greater extent, based on applying some of the agile methodologies, among which particularly highlights the Scrum. Agile methodologies are accepted in the IT companies in a large scale and usually result in better delivery of products and greater efficiency and effectiveness in the developing world. However, there are no "complete solutions" in selecting the methodology. Defining the appropriate methodology and its adaptation to the particular company is, on many occasions, really serious process and requires an analysis of the company itself, employees, the product concerned but also the plans for the future. It is the basic motive for this paper – an attempt to define criteria in the selection of the appropriate methodology in software development in the IT companies as well as the factors for assessing the success of the application of that methodology. However, the introduction of some of the agile methodologies, to a lesser or greater extent, depends on certain preconditions that must be met. Theory knows the common prerequisites but they may vary somewhat from region to region, company to company, and of course of the types of project which is expected to implement specific methodology. Also, the success in the implementation of the methodology depends on a number of factors, from organizational to physical. It is also part of the issue concerned in this paper. In addition, the performance of applications is greatly determined by the profiles and characteristics of individuals who perform key roles in the team. For example, in scrum,},
author = {Micic, Lj},
doi = {10.1088/1757-899X/200/1/012031},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Micic - 2017 - Agile methodology selection criteria IT start-up case study.pdf:pdf},
journal = {Mater. Sci. Eng},
title = {{Agile methodology selection criteria: IT start-up case study}},
url = {http://iopscience.iop.org/article/10.1088/1757-899X/200/1/012031/pdf},
volume = {200},
year = {2017}
}
@article{Deployment2015,
author = {Deployment, Continuous},
file = {:C$\backslash$:/Users/Dziugas/Desktop/Universitetas/kursinis darbas/07087120.pdf:pdf},
isbn = {9781479962723},
keywords = {continuousintegration},
number = {c},
title = {{Test Orchestration}},
volume = {00},
year = {2015}
}
@article{Missiroli2017,
abstract = {{\textcopyright} 2017 IEEE. Context: Comparative study of software development methodologies in millenials high school students. Objective: This paper compares the performance and satisfaction of both students and teachers in using two development strategies in a K-12 Computer Science teaching practice. Method: This study includes an experiment, administered in a laboratory controlled setting to measure students' performances. Results: Scrum produces less usable software with better working features compared to Waterfall, it is also more appreciated by students. Teachers are more experienced with Waterfall, which also offers more control on the development process. Conclusions: From an educational perspective, the two methods are equivalent. Since we noted an overall positive effect on the learning environment, we recommend that at least one method be taught in practice.},
author = {Missiroli, Marcello and Russo, Daniel and Ciancarini, Paolo},
doi = {10.1109/SECM.2017.7},
file = {:C$\backslash$:/Users/Dziugas/Desktop/Universitetas/kursinis darbas/07964622.pdf:pdf},
isbn = {9781538627952},
journal = {Proceedings - 2017 IEEE/ACM 1st International Workshop on Software Engineering Curricula for Millennials, SECM 2017},
keywords = {K-12 education,Scrum,Software engineering education,Waterfall},
pages = {47--53},
title = {{Agile for millennials: A comparative study}},
year = {2017}
}
@article{Lassenius2015,
abstract = {This book contains the refereed proceedings of the 16th International Conference on Agile Software Development, XP 2015, held in Helsinki, Finland, in May 2015.While agile development has already become mainstream in industry, this field is still constantly evolving and continues to spur an enormous interest both in industry and academia. The XP conference series has always played, and continues to play, an important role in connecting the academic and practitioner communities, providing a forum for both formal and informal sharing and development of ideas, experiences, and opinions.The theme of XP 2015 "Delivering Value: Moving from Cyclic to Continuous Value Delivery" reflects the modern trend towards organizations that are simultaneously very efficient and flexible in software development and delivery.The 15 full and 7 short papers accepted for XP 2015 were selected from 44 submissions. All of the submitted papers went through a rigorous peer-review process. Additionally, 11 experience reports were selected from 45 proposals, and in each case the authors were shepherded by an experienced researcher.},
author = {Lassenius, Casper and Dings{\o}yr, Torgeir and Paasivaara, Maria},
doi = {10.1007/978-3-319-18612-2},
file = {:C$\backslash$:/Users/Dziugas/Desktop/Universitetas/kursinis darbas/978-3-319-18612-2{\_}14.pdf:pdf},
isbn = {9783319186115},
issn = {18651348},
journal = {Lecture Notes in Business Information Processing},
pages = {166--177},
title = {{Agile processes, in software engineering, and extreme programming: 16th international conference, XP 2015 Helsinki, Finland, may 25-29, 2015 proceedings}},
volume = {212},
year = {2015}
}
@article{Sureshchandra2008,
abstract = {In a crisis ridden business environment, customers have become very averse to surprises. Business windows have become smaller; there is a heightened need for shorter development cycles and higher visibility. All this is translating into more and more customers specifically asking for agile. Service organizations such as Wipro Technologies need to adopt lean and agile methodologies to support the transition. As agile coaches, the biggest challenge we face is in transitioning the mindset of the team from that of a waterfall model to an agile thought pattern. Our experience in converting a waterfall team to agile is shared in this report.},
author = {Sureshchandra, Kalpana and Shrinivasavadhani, Jagadish},
doi = {10.1109/Agile.2008.49},
file = {:C$\backslash$:/Users/Dziugas/Desktop/Universitetas/kursinis darbas/04599456.pdf:pdf},
isbn = {9780769533216},
journal = {Proceedings - Agile 2008 Conference},
pages = {97--101},
title = {{Moving from waterfall to agile}},
year = {2008}
}
@article{Yau2013,
abstract = {Recently, Agile development processes have become popular in the software development community, and have been shown to be effective in large organizations. However, given that the communication and cooperation dynamics in startup companies are very different from that of larger, more established companies, and the fact that the initial focus of a startup might be significantly different from its ultimate goal, it is questionable whether a rigid process model that works for larger companies is appropriate in tackling the problems faced by a startup. When we scale down even further and observe the small scale startup with only a few members, many of the same problems that Agile methodology sets out to solve do not even exist. Then, for a small scale startup, is it still worth putting the resources into establishing a process model? Do the benefits of adopting an Agile methodology outweigh the opportunity cost of spending the resources elsewhere? This paper examines the advantages and disadvantages of adopting an Agile methodology in a small scale tech startup and compares it to other process models, such as the Waterfall model and Lean Startup. In determining whether a rigorous agile methodology is the best development strategy for small scale tech startups, we consider the metrics of cost, time, quality, and scope in light of the particular needs of small startup organizations, and present a case study of a company that has needed to answer this very question. Abstract— Recently, Agile development processes have become popular in the software development community, and have been shown to be effective in large organizations. However, given that the communication and cooperation dynamics in startup companies are very different from that of larger, more established companies, and the fact that the initial focus of a startup might be significantly different from its ultimate goal, it is questionable whether a rigid process model that works for larger companies is appropriate in tackling the problems faced by a startup. When we scale down even further and observe the small scale startup with only a few members, many of the same problems that Agile methodology sets out to solve do not even exist. Then, for a small scale startup, is it still worth putting the resources into establishing a process model? Do the benefits of adopting an Agile methodology outweigh the opportunity cost of spending the resources elsewhere? This paper examines the advantages and disadvantages of adopting an Agile methodology in a small scale tech startup and compares it to other process models, such as the Waterfall model and Lean Startup. In determining whether a rigorous agile methodology is the best development strategy for small scale tech startups, we consider the metrics of cost, time, quality, and scope in light of the particular needs of small startup organizations, and present a case study of a company that has needed to answer this very question. Index Terms—Agile methodology, Lean Startup, small scale tech startup.},
author = {Yau, Alex and Murphy, Christian},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Yau, Murphy - 2013 - Is a Rigorous Agile Methodology the Best Development Strategy for Small Scale Tech Startups Recommended Citation {\&}q.pdf:pdf},
keywords = {Agile methodology,Lean Startup},
title = {{Is a Rigorous Agile Methodology the Best Development Strategy for Small Scale Tech Startups? Recommended Citation "Is a Rigorous Agile Methodology the Best Development Strategy for Small Scale Tech Startups?" Is a Rigorous Agile Methodology the Best Development Strategy for Small Scale Tech Startups? Is a Rigorous Agile Methodology the Best Development Strategy for Small Scale Tech Startups?}},
url = {http://repository.upenn.edu/cis{\_}reports http://repository.upenn.edu/cis{\_}reports/980},
year = {2013}
}
@article{Dorette2011,
author = {Dorette, Jennifer},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Dorette - 2011 - Comparing Agile XP and Waterfall Software Development Processes in two Start-up Companies.pdf:pdf},
title = {{Comparing Agile XP and Waterfall Software Development Processes in two Start-up Companies}},
url = {http://publications.lib.chalmers.se/records/fulltext/149235.pdf},
year = {2011}
}
@article{Chari2018,
abstract = {This research compares the impacts of change requests due to requirement defects on the outcomes of software development projects developed using the Waterfall methodology. The three types of requirement defects examined are incorrect requirements, incomplete requirements and new requirements. Outcomes are measured in terms of total effort expended and software defects injected during software development. While prior literature has examined ways to minimize requirement defects, limited insights are available on the impacts of requirement defects that remain after baseline requirements have been gathered. A sample of 49 software projects following the Waterfall methodology from a large highly mature (CMMI level 5) software development organization was used to statistically estimate the hypothesized relationships between the variables. Using the coordination perspective to develop our model, we find that resolution of change requests due to new requirements increases defects injected as well as effort. The resolution of change requests due to incorrect requirements increases the number of new requirements as well as the number of defects injected. Resolution of change requests due to incom-plete requirements do not have measurable impacts on software project outcomes. Efforts to minimize the number of change requests necessary due to new require-ments, can therefore be an important factor in improving software project outcomes.},
author = {Chari, Kaushal and Agrawal, Manish and Amyot, Daniel},
doi = {10.1007/s10664-017-9506-4},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Chari, Agrawal, Amyot - 2018 - Impact of incorrect and new requirements on waterfall software project outcomes.pdf:pdf},
journal = {Empir Software Eng},
keywords = {Incorrect requirements,New requirements,Requirements defects},
pages = {165--185},
title = {{Impact of incorrect and new requirements on waterfall software project outcomes}},
url = {https://link.springer.com/content/pdf/10.1007{\%}2Fs10664-017-9506-4.pdf},
volume = {23},
year = {2018}
}
@book{Programming,
author = {Programming, Swift and Agile, Using and Nolan, Godfrey},
file = {:C$\backslash$:/Users/Dziugas/Downloads/Agile-Swift-Swift-Programming-Using-Agile-Tools-and-Techniques.pdf:pdf},
isbn = {9781484221013},
title = {{Agile Swift}}
}
@article{Rubin2012,
abstract = {A practival guide to the most popular agile process},
author = {Rubin, Kenneth S.},
file = {:C$\backslash$:/Users/Dziugas/Downloads/Essential-Scrum-A-Practical-Guide-to-the-Most-Popular-Agile-Process.pdf:pdf},
isbn = {978-0-13-704329-3},
issn = {978-0-13-704329-3},
keywords = {agile,project management,scrum},
pages = {83},
title = {{Essential Scrum}},
year = {2012}
}
@book{Moreira2003,
abstract = {MANTYS established a Working Group in 2002 to develop the concept of The Agile Enterprise relevant to machine tool builders operating in current difficult trading conditions and a climate of rapidly changing customer requirements. Whilst also addressing short-term survival policies, the purpose of this scenario sheet is to address longer-term agility strategies. Issues such as the manufacturing challenges, reconfigurable manufacturing systems, structures for well-integrated supply chains, new business paradigms for machinery and managing innovation are all included.},
author = {Moreira, Mario},
booktitle = {Challenges},
doi = {10.1007/978-1-4842-2391-8},
file = {:C$\backslash$:/Users/Dziugas/Downloads/The-Agile-Enterprise-Building-and-Running-Agile-Organizations.pdf:pdf},
isbn = {978-1-4842-2391-8},
issn = {01674544},
pages = {274},
title = {{The agile enterprise: Building and running agile organizations}},
year = {2003}
}
@article{Palmquist2013,
abstract = {This technical note (TN) is part of the Software Engineering Institute's series on Agile in the Department of Defense (DoD). It primarily addresses what at first seems a small issue on the road to Agile adoption the confusion of terms. However, this is a much larger issue, as ineffective communications among and between stakeholders is often cited as a significant stumbling block on any project. 3 Confusion over simple terms is a needless hurdle. Many terms and concepts used by Agile practitioners seem to confound those working in the DoD's Traditional World of waterfall based environment, and vice versa. The goal of this paper is to assemble terms and concepts from both environments to show both the similarities (of which there are many) and differences (of which there are also many). A comprehensive cross dictionary was beyond the scope of this work; the authors strove to select from those terms most commonly encountered when considering Agile adoption. Therefore, the authors selected terms based on suggestions from both inside and outside the SEI, but deliberately limited themselves to 25 terms from each environment.},
author = {Palmquist, M. Steven and Lapham, Mary Ann and Miller, Suzanne and Chick, Timothy and Ozkaya, Ipek},
doi = {CMU/SEI-2013-TN-021},
file = {:C$\backslash$:/Users/Dziugas/Desktop/Parallel Worlds{\_} Agile and Waterfall Differences and Similarities.pdf:pdf},
isbn = {CMU/SEI-2013-TN-021},
journal = {SEI, Carnegie Mellon University},
keywords = {Agile,development,waterfall},
number = {October},
pages = {1--101},
title = {{Parallel Worlds: Agile and Waterfall Differences and Similarities}},
year = {2013}
}
@article{Cho2010,
abstract = {Agile software development methods have been developed and evolved since early 1990s. Due to the short development life cycle through an iterative and incremental process, the agile methods have been used widely in business sectors where requirements are relatively unstable. This paper explains the differences between traditional software development methods and agile software development methods, and introduces the characteristics of one of the popular agile methods, Scrum. Finally, the paper illustrates issues and challenges discovered through an in-depth case study in a company which has employed Scrum for many projects. The insights presented in the paper can be used in organizations that are in the process of agile software development using Scrum.},
author = {Cho, Juyun Joey},
file = {:C$\backslash$:/Users/Dziugas/Desktop/41d6f352f97a94af1af94c56e0ba2584effd.pdf:pdf},
journal = {Issues in Information Systems},
keywords = {agile software,empirical process,scrum,scrum of scrums,social,waterfall},
number = {2},
pages = {599},
title = {{An Exploratory Study on Issues and Challenges of Agile Software Development with Scrum}},
volume = {9},
year = {2010}
}
@book{Humble2010,
abstract = {One of the major aims of this book is to improve collaboration between the people responsible for delivering software. In particular, we have in mind developers, testers, systems and database administrators, and managers. We cover topics from traditional configuration management, source code control, release planning, auditing, compliance, and integration to the automation of your building, testing, and deployment processes. We also describe techniques such as automated acceptance testing, dependency management, database migration, and the creation and management of testing and production environments. Many people involved in creating software consider these activities secondary to writing code. However, in our experience they take up a great deal of time and effort, and are critical to successful software delivery. When the risks surrounding these activities are not managed adequately, they can end up costing a lot of money, often more than the cost of building the software in the first place.},
archivePrefix = {arXiv},
arxivId = {arXiv:1011.1669v3},
author = {Humble, Jezz and Farley, David},
booktitle = {Continuous delivery},
doi = {10.1007/s13398-014-0173-7.2},
eprint = {arXiv:1011.1669v3},
file = {:C$\backslash$:/Users/Dziugas/Downloads/Continuous-Delivery-Reliable-Software-Releases-through-Build-Test-and-Deployment-Automation-.pdf:pdf},
isbn = {978-0-321-60191-9},
issn = {1098-6596},
pages = {497},
pmid = {25246403},
title = {{Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation}},
year = {2010}
}
@article{Szalvay2004,
author = {Szalvay, Victor and Suite, Bel-red Rd},
file = {:C$\backslash$:/Users/Dziugas/Desktop/Intro{\_}to{\_}Agile.pdf:pdf},
number = {November},
title = {{An Introduction to Agile Software Development}},
year = {2004}
}
@article{Balaji2012,
abstract = {Our Scenario is to discuss for the requirement given by the client which development Life cycle method to be used. Let us have a comparative study which model will be effective in the below models and the Pros {\&} Cons of choosing the model. 1. Waterfall Model 2. V-Model 3. Agile Model},
author = {Balaji, S},
doi = {10.1.1.695.9278},
file = {:C$\backslash$:/Users/Dziugas/Desktop/waterfall.pdf:pdf},
isbn = {ISSN 2304-077},
issn = {2304-0777},
journal = {WATEERFALL Vs V-MODEL Vs AGILE : A COMPARATIVE STUDY ON SDLC},
keywords = {agile,sdlc,v-model,waterfall},
number = {1},
pages = {26--30},
title = {{Waterfall vs v-model vs agile : A comparative study on SDLC}},
volume = {2},
year = {2012}
}
@article{Dawson2010,
abstract = {This article examines the integration of secure coding practices into the overall Software Development Life Cycle (SDLC). Also detailed is a proposed methodology for integrating software assurance into the Department of Defense Information Assurance Certification {\&} Accreditation Process (DIACAP). This method for integrating software assurance helps in properly securing the application layer as that is where more than half of the vulnerabilities lie in a system.},
author = {Dawson, Maurice and Burrell, Darrell Norman and Rahim, Emad and Brewster, Stephen},
file = {:C$\backslash$:/Users/Dziugas/Downloads/Integrating{\_}Software{\_}Assurance{\_}into{\_}the{\_}Software{\_}Development{\_}Life{\_}Cycle{\_}SDLC1.pdf:pdf},
isbn = {19455240},
issn = {19455240},
journal = {Journal of Information Systems Technology {\&} Planning},
keywords = {secure coding,secure software development lifecycle,software assurance},
number = {6},
pages = {49--53},
title = {{Integrating software assurance into the software development life cycle (SDLC)}},
url = {https://works.bepress.com/maurice{\_}dawson/11/},
volume = {3},
year = {2010}
}
@article{Gill2018,
abstract = {If you would like to write for this, or any other Emerald publication, then please use our Emerald for Authors service information about how to choose which publication to write for and submission guidelines are available for all. Please visit www.emeraldinsight.com/authors for more information. About Emerald www.emeraldinsight.com Emerald is a global publisher linking research and practice to the benefit of society. The company manages a portfolio of more than 290 journals and over 2,350 books and book series volumes, as well as providing an extensive range of online products and additional customer resources and services. Abstract Purpose – Development and operations (DevOps) is complex in nature. Organizations are unsure how to effectively establish a DevOps capability for the continuous delivery of information management systems. This paper aims to compile and analyze DevOps by applying the well-known systematic literature review (SLR) approach. This review is intended to provide a knowledge base to support the informed, effective and less risky adoption of DevOps for information management systems. Design/methodology/approach – In this qualitative research study, the SLR method was applied to identify 3,790 papers, of which, 32 relevant papers were selected and reviewed. Findings – The results are organized using the well-known ISO/IEC 24744 metamodel elements: people (roles), process, technology and artifacts. In total 11 major roles, 6 processes, 23 technologies, 5 artifacts and 7 challenges (including 6 corresponding solutions) were found. DevOps engineer is becoming a newly identified role. Continuous delivery pipeline and continuous improvement are the most highlighted major DevOps processes. Build system technology is becoming the key focus of DevOps. Finally, major challenges are around people and culture and the misunderstanding of DevOps. Potential research areas are: DevOps analytics, artifacts and tool–chain integration. Research limitations/implications – The research findings will serve as a resource for both practitioners and researchers who have interest in the research and adoption of DevOps for information management systems. Originality/value – This paper provides a comprehensive systematic review of the body of knowledge to support the ongoing research and adoption of emerging trends of DevOps for information management systems.},
author = {Gill, Asif Qumer and Loumish, Abhishek and Riyat, Isha and Han, Sungyoup},
doi = {10.1108/VJIKMS-02-2017-0007},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Gill et al. - 2018 - VINE Journal of Information and Knowledge Management Systems DevOps for information management systems For Autho(2).pdf:pdf},
journal = {VINE Journal of Information and Knowledge Management Systems},
keywords = {Challenges,Continuous delivery,Continuous deployment,DevOps},
number = {1},
pages = {122--139},
title = {{VINE Journal of Information and Knowledge Management Systems DevOps for information management systems For Authors DevOps for information management systems}},
url = {https://www.emeraldinsight.com/doi/pdfplus/10.1108/VJIKMS-02-2017-0007},
volume = {48},
year = {2018}
}
@article{GerryClapsRichardSvensson2014,
author = {{Gerry Claps, Richard Svensson}, Ayb{\"{u}}ke Aurum},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Gerry Claps, Richard Svensson - 2014 - On the journey to continuous deployment Technical and social challenges along the way.pdf:pdf},
journal = {Information and Software Technology},
pages = {21--31},
title = {{On the journey to continuous deployment: Technical and social challenges along the way}},
url = {https://ac.els-cdn.com/S0950584914001694/1-s2.0-S0950584914001694-main.pdf?{\_}tid=dabbbba1-7c16-448c-a12f-634be2acc4b6{\&}acdnat=1520688056{\_}3261bc9639911537cfd36db8b7af23d9},
year = {2014}
}
@inproceedings{Rathod2015,
author = {Rathod, Nikhil and Surve, Anil},
booktitle = {2015 International Conference on Pervasive Computing (ICPC)},
doi = {10.1109/PERVASIVE.2015.7087120},
isbn = {978-1-4799-6272-3},
month = {jan},
pages = {1--5},
publisher = {IEEE},
title = {{Test orchestration a framework for Continuous Integration and Continuous deployment}},
url = {http://ieeexplore.ieee.org/document/7087120/},
year = {2015}
}
@inproceedings{Rathod2015a,
author = {Rathod, Nikhil and Surve, Anil},
booktitle = {2015 International Conference on Pervasive Computing (ICPC)},
doi = {10.1109/PERVASIVE.2015.7087120},
isbn = {978-1-4799-6272-3},
month = {jan},
pages = {1--5},
publisher = {IEEE},
title = {{Test orchestration a framework for Continuous Integration and Continuous deployment}},
url = {http://ieeexplore.ieee.org/document/7087120/},
year = {2015}
}
@article{Gill2018a,
abstract = {If you would like to write for this, or any other Emerald publication, then please use our Emerald for Authors service information about how to choose which publication to write for and submission guidelines are available for all. Please visit www.emeraldinsight.com/authors for more information. About Emerald www.emeraldinsight.com Emerald is a global publisher linking research and practice to the benefit of society. The company manages a portfolio of more than 290 journals and over 2,350 books and book series volumes, as well as providing an extensive range of online products and additional customer resources and services. Abstract Purpose – Development and operations (DevOps) is complex in nature. Organizations are unsure how to effectively establish a DevOps capability for the continuous delivery of information management systems. This paper aims to compile and analyze DevOps by applying the well-known systematic literature review (SLR) approach. This review is intended to provide a knowledge base to support the informed, effective and less risky adoption of DevOps for information management systems. Design/methodology/approach – In this qualitative research study, the SLR method was applied to identify 3,790 papers, of which, 32 relevant papers were selected and reviewed. Findings – The results are organized using the well-known ISO/IEC 24744 metamodel elements: people (roles), process, technology and artifacts. In total 11 major roles, 6 processes, 23 technologies, 5 artifacts and 7 challenges (including 6 corresponding solutions) were found. DevOps engineer is becoming a newly identified role. Continuous delivery pipeline and continuous improvement are the most highlighted major DevOps processes. Build system technology is becoming the key focus of DevOps. Finally, major challenges are around people and culture and the misunderstanding of DevOps. Potential research areas are: DevOps analytics, artifacts and tool–chain integration. Research limitations/implications – The research findings will serve as a resource for both practitioners and researchers who have interest in the research and adoption of DevOps for information management systems. Originality/value – This paper provides a comprehensive systematic review of the body of knowledge to support the ongoing research and adoption of emerging trends of DevOps for information management systems.},
author = {Gill, Asif Qumer and Loumish, Abhishek and Riyat, Isha and Han, Sungyoup},
doi = {10.1108/VJIKMS-02-2017-0007},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Gill et al. - 2018 - VINE Journal of Information and Knowledge Management Systems DevOps for information management systems For Authors.pdf:pdf},
journal = {VINE Journal of Information and Knowledge Management Systems},
keywords = {Challenges,Continuous delivery,Continuous deployment,DevOps},
number = {1},
pages = {122--139},
title = {{VINE Journal of Information and Knowledge Management Systems DevOps for information management systems For Authors DevOps for information management systems}},
url = {https://www.emeraldinsight.com/doi/pdfplus/10.1108/VJIKMS-02-2017-0007},
volume = {48},
year = {2018}
}
@inproceedings{Virmani2015,
abstract = {Vi15b},
author = {Virmani, Manish},
booktitle = {5th International Conference on Innovative Computing Technology, INTECH 2015},
doi = {10.1109/INTECH.2015.7173368},
isbn = {9781467375504},
keywords = {Continuous Delivery,Continuous Integration,DevOps,Infrastructure as a Code (IAAC)},
title = {{Understanding DevOps {\&} bridging the gap from continuous integration to continuous delivery}},
year = {2015}
}
@misc{ConstantineCois,
author = {{Constantine Cois}},
title = {{Continuous Integration in DevOps}},
url = {https://insights.sei.cmu.edu/devops/2015/01/continuous-integration-in-devops-1.html},
urldate = {2018-03-07}
}
@article{Banica2017,
abstract = {In this paper, the authors aim to present the concept of DevOps (Development {\&} Operations), considering its degree of novelty in the area of project management. Firstly, the authors will bring theoretical arguments to support the idea that DevOps is an early-stage methodology, built on the Agile principles, but coming with its own contributions in project management for software development and implementation. Therefore, we believe that after a short time, DevOps will replace its predecessors. Secondly, we experienced this methodology by developing a small project in academic environment by three teams of master students, using VersionOne software. The Conclusions will emphasize the relevance and the future expected effects of DevOps methodology in the project management domain.},
author = {Banica, Logica and Radulescu, Magdalena and Rosca, Doina and Hagiu, Alina},
doi = {10.12948/issn14531305/21.3.2017.04},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Banica et al. - 2017 - Is DevOps another Project Management Methodology.pdf:pdf},
journal = {Informatica Economică},
keywords = {Academic Environment,DevOps Methodology,Project Management Software},
number = {3},
title = {{Is DevOps another Project Management Methodology?}},
url = {http://revistaie.ase.ro/content/83/04 - banica, radulescu, rosca, hagiu.pdf},
volume = {21},
year = {2017}
}
@article{Zhu2016,
author = {Zhu, Liming and Bass, Len and Champlin-Scharff, George},
doi = {10.1109/MS.2016.81},
issn = {0740-7459},
journal = {IEEE Software},
month = {may},
number = {3},
pages = {32--34},
title = {{DevOps and Its Practices}},
url = {http://ieeexplore.ieee.org/document/7458765/},
volume = {33},
year = {2016}
}
@article{Ebert2016,
author = {Ebert, Christof and Gallardo, Gorka and Hernantes, Josune and Serrano, Nicolas},
doi = {10.1109/MS.2016.68},
issn = {0740-7459},
journal = {IEEE Software},
month = {may},
number = {3},
pages = {94--100},
title = {{DevOps}},
url = {http://ieeexplore.ieee.org/document/7458761/},
volume = {33},
year = {2016}
}
@article{Bass2018,
author = {Bass, Len},
doi = {10.1109/MS.2017.4541051},
issn = {0740-7459},
journal = {IEEE Software},
month = {jan},
number = {1},
pages = {8--10},
title = {{The Software Architect and DevOps}},
url = {http://ieeexplore.ieee.org/document/8239924/},
volume = {35},
year = {2018}
}
@book{LenBassIngoWeber2015,
address = {New Jersey, United States},
author = {L.Bass and I. Weber and L. Zhu},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Len Bass, Ingo Weber - 2015 - DevOps A Software Architect's Perspective.pdf:pdf},
isbn = {9780134049847},
pages = {352},
publisher = {Addison Wesley, 2015},
title = {{DevOps : A Software Architect's Perspective}},
year = {2015}
}
@article{Roche2013,
abstract = {Software life cycle management was, for a very long time, a controlled exercise. The duration of product design, development, and support was predictable enough that companies and their employees scheduled their finances, vacations, surgeries, and mergers around product releases. When developers were busy, quality assurance (QA) had it easy. As the coding portion of a release cycle came to a close, QA took over while support ramped up. Then when the product released, the development staff exhaled, rested, and started the loop again while the support staff transitioned to busily supporting the new product.},
author = {Roche, James},
doi = {10.1145/2524713.2524721},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Roche - 2013 - Adopting DevOps practices in quality assurance.pdf:pdf},
issn = {00010782},
journal = {Communications of the ACM},
number = {11},
pages = {38--43},
title = {{Adopting DevOps practices in quality assurance}},
url = {http://dl.acm.org/citation.cfm?doid=2524713.2524721},
volume = {56},
year = {2013}
}
@article{Tamburri,
author = {Tamburri, D A and Nitto, E Di and Guerriero, M},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Tamburri, Nitto, Guerriero - Unknown - A Software Architecture Framework for Quality-Aware DevOps What are we up to , today.pdf:pdf},
number = {644869},
title = {{A Software Architecture Framework for Quality-Aware DevOps What are we up to , today ?}}
}
@article{DeKort2016,
abstract = {Includes index. This book tells you everything you need to know to help your organization implement DevOps on the Microsoft platform. You will learn how to use Visual Studio, Visual Studio Team Services, and Azure to implement a complete DevOps process in your company. You will learn about Agile Project Management, Continuous Integration, Continuous Delivery, Technical Debt Management, Automatic Testing and Monitoring, and see how all these areas fit together. DevOps is important for organizations that want to make the best use of their resources and avoid costly mistakes. Teams that embrace DevOps deploy code up to 30 times more frequently than their competition and less than 50{\%} of their deployments fail according to Puppet Labs State of DevOps survey. DevOps on the Microsoft Stack shows you how to help your organization implement DevOps, covering the tooling they will need and how to make everything work together while following best practices. The focus is not only on technology but also on the cultural issues that teams will face when implementing DevOps. The author's goal is to not only show you which tooling there is but help you to successfully use everything together to implement DevOps in your projects and organization. In this book, you'll learn: What DevOps is and how it can help development teams How to use Visual Studio, Visual Studio Team Services, and Azure to setup a DevOps process How to introduce DevOps to your organization and how to overcome problems.},
author = {de Kort, Wouter},
doi = {10.1007/978-1-4842-1446-6},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/de Kort - 2016 - DevOps on the Microsoft Stack.pdf:pdf},
isbn = {978-1-4842-1447-3},
pages = {19--41},
title = {{DevOps on the Microsoft Stack}},
url = {http://link.springer.com/10.1007/978-1-4842-1446-6},
year = {2016}
}
@book{Yang2012,
abstract = {The idea of cloud computing aligns with new dimension emerging in service-oriented infrastructure where service provider does not own physical infrastructure but instead outsources to dedicated infrastructure providers. Cloud computing has now become a new computing paradigm as it can provide scalable IT infrastructure, QoS-assured services, and customizable computing environment. However, it still remains a challenging task to provide QoS assured services to serve customers with minimized cost, while also to guarantee the maximization of the business objectives (e.g. margin profit) to service provider and infrastructure provider within certain constraints. In order to address these issues, this chapter proposes a QoS-oriented service computing methodology, and discusses associated topics including service level agreement and associated reference architecture, green service, service metering and metrics, service monitoring, and on-demand resource provisioning. In the case study, we demonstrate how we employ QoS-oriented service computing in a multi-server, multi-user on-line game to facilitate the on-demand resource provisioning to maintain quality of service and quality of experience. {\textcopyright} 2012, IGI Global.},
author = {Yang, Xiaoyu},
booktitle = {Advanced Design Approaches to Emerging Software Systems: Principles, Methodologies and Tools},
doi = {10.4018/978-1-60960-735-7},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Yang - 2012 - Advanced Design Approaches to Emerging Software Systems.pdf:pdf},
isbn = {9781609607357},
pages = {274--296},
title = {{Advanced Design Approaches to Emerging Software Systems}},
url = {http://www.scopus.com/inward/record.url?eid=2-s2.0-84898550751{\&}partnerID=tZOtx3y1},
year = {2012}
}
@article{Walls2013,
abstract = {Building a DevOps culture requires more than installing a configuration management system, using a source code repository, and telling your teams Ok, now we are all doing DevOps. Organizational culture is comprised of a shared set of values and behaviors...},
author = {Walls, Mandi},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Walls - 2013 - Building a DevOps Culture.pdf:pdf},
isbn = {978-14-4936-417-5},
journal = {Velocity Web Performance and Operations},
title = {{Building a DevOps Culture}},
year = {2013}
}
@article{Spinellis2016,
abstract = {In many IT sectors, DevOps is here to stay, helping deliver higher-quality services more efficiently. Thinking like a DevOps developer is an essential trait of an enlightened software professional. This article is part of a theme issue on DevOps.},
author = {Spinellis, Diomidis},
doi = {10.1109/MS.2016.76},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Spinellis - 2016 - Being a DevOps Developer.pdf:pdf},
issn = {07407459},
journal = {IEEE Software},
keywords = {DevOps,IT operations,agile development,software developers,software development,software engineering},
number = {3},
pages = {4--5},
title = {{Being a DevOps Developer}},
volume = {33},
year = {2016}
}
@article{Hamunen2016,
author = {Hamunen, Joonas},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Hamunen - 2016 - Challenges in adopting a Devops approach to software development and operations.pdf:pdf},
keywords = {G2 Pro gradu,diplomity{\"{o}}},
pages = {69},
title = {{Challenges in adopting a Devops approach to software development and operations}},
year = {2016}
}
@article{Rajkumar2016,
abstract = {DevOps presents a significant broader perspective in delivering software solutions. The perception of DevOps being a mere tool has been formulated into a change in culture, paradigms in automation, clarity in measuring risks and facilitating ease of sharing. DevOps has been responsible for companies to move from a monolithic pace of software releases to an agile mindset. This paper discovers the significance of DevOps and tries to explore the process of transformation from a legacy method and onto the impact of the change on overall architecture and software scale out. The transformation from a legacy mindset to agile mindset requires a formidable change to the organizational setup. The journey of adoption of such a culture requires various degrees of effort and techniques. In this paper, we cover the concepts, adoption strategies and the impact of such adoption strategies.},
author = {Rajkumar, M. and Pole, Anil Kumar and Adige, Vittalraya Shenoy and Mahanta, Prabal},
doi = {10.1109/ICACCA.2016.7578902},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Rajkumar et al. - 2016 - DevOps culture and its impact on cloud delivery and software development.pdf:pdf},
isbn = {9781509006731},
journal = {Proceedings - 2016 International Conference on Advances in Computing, Communication and Automation, ICACCA 2016},
keywords = {Agile,Culture,DevOps,Leadership},
title = {{DevOps culture and its impact on cloud delivery and software development}},
year = {2016}
}
@article{Callanan2016,
abstract = {Wotif Group used DevOps principles to recover from the downward spiral of manual release activity that many IT departments face. Its approach involved the idea of "making it easy to do the right thing." By defining the right thing (deployment standards) for development and operations teams and making it easy to adopt, Wotif drastically improved the average release cycle time. This article is part of a theme issue on DevOps.},
author = {Callanan, Matt and Spillane, Alexandra},
doi = {10.1109/MS.2016.66},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Callanan, Spillane - 2016 - DevOps Making It Easy to Do the Right Thing.pdf:pdf},
issn = {07407459},
journal = {IEEE Software},
keywords = {DevOps,Internet,Wotif Group,continuous delivery,continuous deployment,e-commerce,software delivery,software development,software engineering,software release,software release management and delivery},
number = {3},
pages = {53--59},
pmid = {11575294},
title = {{DevOps: Making It Easy to Do the Right Thing}},
volume = {33},
year = {2016}
}
@article{Gottesheim2015,
abstract = {Did you know that just a handful of root causes are responsible for the majority of application issues like crashes, slow performance or incorrect application behavior? Non-optimized database access, deployment mistakes, memory leaks, or inefficient coding are just some examples. Companies that think Continuous Delivery and DevOps will solve all their problems typically fail as they just run into these problems faster. In this session we take a closer look at the most common problems, how to detect them and how to incorporate performance into your DevOps culture by automatically detecting these top problems. Copyright {\textcopyright} 2015 ACM.},
author = {Gottesheim, Wolfgang},
doi = {10.1145/2693182.2693187},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Gottesheim - 2015 - Challenges, Benefits and Best Practices of Performance Focused DevOps.pdf:pdf},
isbn = {9781450333375},
issn = {9781450333375},
journal = {Proceedings of the 4th International Workshop on Large-Scale Testing - LT '15},
pages = {3--3},
title = {{Challenges, Benefits and Best Practices of Performance Focused DevOps}},
url = {http://dl.acm.org/citation.cfm?doid=2693182.2693187},
year = {2015}
}
@article{Ebert2016a,
abstract = {Building on lean and agile practices, DevOps means end-to-end automation in software development and delivery. Hardly anybody will be able to approach it with a cookbook-style approach, but most developers will benefit from better connecting the previously isolated silos of development and operations. Many DevOps tools exist that can help them do this.},
author = {Ebert, Christof and Gallardo, Gorka and Hernantes, Josune and Serrano, Nicolas},
doi = {10.1109/MS.2016.68},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Ebert et al. - 2016 - DevOps.pdf:pdf},
isbn = {0903458950},
issn = {07407459},
journal = {IEEE Software},
keywords = {AWS,Amazon Web Services,Ansible,Bamboo,Cacti,Chef,DevOps,Gradle,Graylog2,Jenkins,Logging,Loggly,Maven,Nagios,New Relic,Puppet,TeamCity,apache Ant,configuration management,continuous integration,microservices,software development,software engineering},
number = {3},
pages = {94--100},
title = {{DevOps}},
volume = {33},
year = {2016}
}
@book{Swartout2012,
abstract = {Continuous delivery and Devops explained. Table of Contents; Continuous Delivery and DevOps: A Quickstart Guide; Continuous Delivery and DevOps: A Quickstart Guide; Credits; About the Author; Acknowledgement; About the Reviewers; www.PacktPub.com; Support files, eBooks, discount offers and more; Why Subscribe?; Free Access for Packt account holders; Preface; What this book covers; What you need for this book; Who this book is for; Conventions; Reader feedback; Customer support; Errata; Piracy; Questions; 1. Evolution of a Software House; ACME systems Version 1.0; Software delivery process flow Version 1.0; ACME systems Version 2.0. Software delivery process flow Version 2.0A few brave men and women; ACME systems Version 3.0; Software delivery process flow Version 3.0; Summary; 2. No Pain, No Gain; Elephant in the room; Ground rules; Openness and honesty is the key; Include (almost) everyone; Some tried and tested techniques; Value stream mapping; Using retrospectives; The timeline game; StoStaKee; Summary; 3. Plan of Attack; Setting and communicating goals and vision; Standardizing vocabulary and language; A business change project in its own right; The benefits of a dedicated team; The importance of evangelism. The courage and determination required throughout the organizationUnderstanding the cost; Seeking advice from others; Summary; 4. Tools and Technical Approaches; Engineering best practice; Source control; Small, frequent, and simple changes; Never break your consumer; Open and honest peer working practices; Fail fast and often; Automated build and testing; Continuous integration; Architectural approaches; Component based architecture; Layers of abstraction; How many environments is enough?; Using the same binary across all environments; Develop against a like live environment; CD tooling. Automated provisioningNo-downtime deployments; Monitoring; When a simple manual process is also an effective tool; Summary; 5. Culture and Behaviors; Open, honest, and courageous dialogue; Openness and honesty; Courageous dialogue; The physical environment; Encouraging and embracing collaboration; Fostering innovation and accountability at grass roots; The blame culture; Blame slow, learn quickly; Building trust-based relationships across organizational boundaries; Rewarding good behaviors and success; The odd few; Recognizing how different teams are incentivized can have an impact. Embracing change and reducing riskChanging people's perceptions with pudding; Being highly visible about what you are doing and how you are doing it; Summary; 6. Hurdles to Look Out For; What are the potential issues you need to look out for?; Dissenters in the ranks; The change curve; The outsiders; Corporate guidelines, red tape, and standards; Geographically diverse teams; Failure during the evolution; Processes that are not repeatable; Recruitment; Summary; 7. Measuring Success and Remaining Successful; Measuring effective engineering best practice; Code versus comments; Code complexity.},
archivePrefix = {arXiv},
arxivId = {arXiv:1011.1669v3},
author = {Swartout, Paul},
booktitle = {Journal of Chemical Information and Modeling},
doi = {10.1017/CBO9781107415324.004},
eprint = {arXiv:1011.1669v3},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Swartout - 2012 - Continous Delivery and DevOps A Quickstart Guide.pdf:pdf},
isbn = {9788578110796},
issn = {1098-6596},
number = {9},
pmid = {25246403},
title = {{Continous Delivery and DevOps: A Quickstart Guide}},
volume = {53},
year = {2012}
}
@book{Httermann2012,
author = {Httermann, Michael},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Httermann - 2012 - DevOps for developers.pdf:pdf},
isbn = {978-1-4302-4570-4},
pages = {196},
title = {{DevOps for developers}},
year = {2012}
}
@article{Lassenius2015a,
abstract = {This book contains the refereed proceedings of the 16th International Conference on Agile Software Development, XP 2015, held in Helsinki, Finland, in May 2015.While agile development has already become mainstream in industry, this field is still constantly evolving and continues to spur an enormous interest both in industry and academia. The XP conference series has always played, and continues to play, an important role in connecting the academic and practitioner communities, providing a forum for both formal and informal sharing and development of ideas, experiences, and opinions.The theme of XP 2015 "Delivering Value: Moving from Cyclic to Continuous Value Delivery" reflects the modern trend towards organizations that are simultaneously very efficient and flexible in software development and delivery.The 15 full and 7 short papers accepted for XP 2015 were selected from 44 submissions. All of the submitted papers went through a rigorous peer-review process. Additionally, 11 experience reports were selected from 45 proposals, and in each case the authors were shepherded by an experienced researcher.},
author = {Lassenius, Casper and Dings{\o}yr, Torgeir and Paasivaara, Maria},
doi = {10.1007/978-3-319-18612-2},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Lassenius, Dings{\o}yr, Paasivaara - 2015 - Agile processes, in software engineering, and extreme programming 16th international conference.pdf:pdf},
isbn = {9783319186115},
issn = {18651348},
journal = {Lecture Notes in Business Information Processing},
keywords = {agile,continuous deployment,devops,software deployment},
pages = {212--217},
title = {{Agile processes, in software engineering, and extreme programming: 16th international conference, XP 2015 Helsinki, Finland, may 25-29, 2015 proceedings}},
volume = {212},
year = {2015}
}
@article{Waller2015,
abstract = {The DevOps movement intends to improve communication, collaboration, and integration between software developers (Dev) and IT operations professionals (Ops). Automation of software quality assurance is key to DevOps success. We present how automated performance benchmarks may be included into continuous integration. As an example, we report on regression benchmarks for application monitoring frameworks and illustrate the inclusion of automated benchmarks into continuous integration setups.},
author = {Waller, Jan and Ehmke, Nils C. and Hasselbring, Wilhelm},
doi = {10.1145/2735399.2735416},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Waller, Ehmke, Hasselbring - 2015 - Including Performance Benchmarks into Continuous Integration to Enable DevOps.pdf:pdf},
isbn = {01635948},
issn = {01635948},
journal = {ACM SIGSOFT Software Engineering Notes},
keywords = {jenkins,kieker,moobench},
number = {2},
pages = {1--4},
title = {{Including Performance Benchmarks into Continuous Integration to Enable DevOps}},
url = {http://dl.acm.org/citation.cfm?doid=2735399.2735416},
volume = {40},
year = {2015}
}
@article{Vavpotic2009,
abstract = {The paper presents an approach for evaluation of software development methodologies (SDM) that considers the aspects of a SDM's social adoption and technical efficiency. It builds on existing evaluation models used in the field of SDM. Case study approach was used to validate the model in four software development organisations. In all four cases the management confirmed that the model provided valuable new insights into adoption and efficiency of the companies' SDM. {\textcopyright} 2008 Elsevier B.V. All rights reserved.},
author = {Vavpotic, Damjan and Bajec, Marko},
doi = {10.1016/j.infsof.2008.06.001},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Vavpotic, Bajec - 2009 - An approach for concurrent evaluation of technical and social aspects of software development methodologies.pdf:pdf},
isbn = {0950-5849},
issn = {09505849},
journal = {Information and Software Technology},
keywords = {Method engineering,Methodology evaluation,Software development methodology,Software process improvement},
number = {2},
pages = {528--545},
publisher = {Elsevier B.V.},
title = {{An approach for concurrent evaluation of technical and social aspects of software development methodologies}},
url = {http://dx.doi.org/10.1016/j.infsof.2008.06.001},
volume = {51},
year = {2009}
}
@book{Sharma2017,
author = {Sharma, Sanjeev},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Sharma - 2017 - The DevOps Adoption Playbook A Guide to adopting DevOps in a multi-speed IT Enterprise.pdf:pdf},
isbn = {9781119308744},
title = {{The DevOps Adoption Playbook: A Guide to adopting DevOps in a multi-speed IT Enterprise}},
year = {2017}
}
@article{Jones2016,
abstract = {The DevOps phenomenon is gathering pace as more UK or-ganisations seek to leverage the benefits it can potentially bring to software engineering functions. However substan-tial organisational change is inherent to adopting DevOps, especially where there are prior and established methods. As part of a wider piece of doctoral research investigating the management challenges of DevOps adoption, we present early findings of a six month qualitative diary study follow-ing the adoption of DevOps within a UK based SME with over 200 employees. We find that within our case study organisation, the DevOps approach is being adopted for the development of a new system used both internally and by customers. DevOps, conceptually, appears to be gener-ally well regarded, but in reality is proving difficult to fully adopt. This difficulty is down to a combination of necessity in maintaining a legacy system, lack of senior management buy-in, managerial structure and resistance. Additionally, we are finding evidence of job crafting, especially with the software developers. Taken together, we put forward the argument that DevOps is an interdisciplinary topic which would greatly benefit from further management and poten-tially psychology oriented research attention.},
archivePrefix = {arXiv},
arxivId = {arXiv:1602.05561v1},
author = {Jones, Stephen and Noppen, Joost and Lettice, Fiona},
doi = {10.1145/2945408.2945410},
eprint = {arXiv:1602.05561v1},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Jones, Noppen, Lettice - 2016 - Management challenges for DevOps adoption within UK SMEs.pdf:pdf},
isbn = {9781450344111},
issn = {0146-4833},
journal = {Proceedings of the 2nd International Workshop on Quality-Aware DevOps - QUDOS 2016},
keywords = {case study,devops,management challenges,sme,united kingdom},
pages = {7--11},
title = {{Management challenges for DevOps adoption within UK SMEs}},
url = {http://dl.acm.org/citation.cfm?doid=2945408.2945410},
year = {2016}
}
@book{Blazek2015,
abstract = {Abstract In order to demonstrate the practical aspects of different numerical solution methodologies, various source codes are made available for download. Provided are the sources of quasi 1-D Euler, as well as of 2-D Euler and Navier-Stokes structured and unstructured flow solvers. Furthermore, source codes of 2-D structured algebraic and elliptic grid generators are included together with a converter from structured to unstructured grids. Furthermore, two programs are provided to conduct the linear stability analysis of explicit and implicit time-stepping schemes. The source codes are completed by a set of worked out examples including the grids, the input files, and the results. The code package also contains several programs for the demonstration of parallelization techniques. We describe the contents of the directories, the capabilities of the particular programs, and present examples of their usage.},
author = {Blazek, Jiri},
booktitle = {Computational Fluid Dynamics: Principles and Applications},
doi = {10.1016/B978-0-08-099995-1.00012-9},
file = {:C$\backslash$:/Users/Dziugas/AppData/Local/Mendeley Ltd./Mendeley Desktop/Downloaded/Blazek - 2015 - Software Applications.pdf:pdf},
isbn = {978-0-08-099995-1},
pages = {395--407},
title = {{Software Applications}},
url = {http://linkinghub.elsevier.com/retrieve/pii/B9780080999951000129},
year = {2015}
}
@incollection{Riungu-Kalliosaari2016,
author = {Riungu-Kalliosaari, Leah and M{\"{a}}kinen, Simo and Lwakatare, Lucy Ellen and Tiihonen, Juha and M{\"{a}}nnist{\"{o}}, Tomi},
doi = {10.1007/978-3-319-49094-6_44},
pages = {590--597},
title = {{DevOps Adoption Benefits and Challenges in Practice: A Case Study}},
url = {http://link.springer.com/10.1007/978-3-319-49094-6{\_}44},
year = {2016}
}
@article{Casale2016,
author = {Casale, Giuliano and Chesta, Cristina and Deussen, Peter and {Di Nitto}, Elisabetta and Gouvas, Panagiotis and Koussouris, Sotiris and Stankovski, Vlado and Symeonidis, Andreas and Vlassiou, Vlassis and Zafeiropoulos, Anastasios and Zhao, Zhiming},
doi = {10.1016/j.procs.2016.08.278},
issn = {18770509},
journal = {Procedia Computer Science},
pages = {34--42},
title = {{Current and Future Challenges of Software Engineering for Services and Applications}},
url = {http://linkinghub.elsevier.com/retrieve/pii/S1877050916320944},
volume = {97},
year = {2016}
}
@incollection{Lwakatare2016,
author = {Lwakatare, Lucy Ellen and Kuvaja, Pasi and Oivo, Markku},
doi = {10.1007/978-3-319-49094-6_27},
pages = {399--415},
title = {{Relationship of DevOps to Agile, Lean and Continuous Deployment}},
url = {http://link.springer.com/10.1007/978-3-319-49094-6{\_}27},
year = {2016}
}
